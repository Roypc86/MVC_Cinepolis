/*
Deployment script for Database_Cinepolis

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Database_Cinepolis"
:setvar DefaultFilePrefix "Database_Cinepolis"
:setvar DefaultDataPath "C:\Users\XPC\AppData\Local\Microsoft\VisualStudio\SSDT\Database_Cinepolis"
:setvar DefaultLogPath "C:\Users\XPC\AppData\Local\Microsoft\VisualStudio\SSDT\Database_Cinepolis"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[Pelicula]...';


GO
CREATE TABLE [dbo].[Pelicula] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Nombre]   NVARCHAR (30) NULL,
    [Genero]   NVARCHAR (30) NULL,
    [Director] NVARCHAR (30) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[PeliculaAdultos]...';


GO
CREATE TABLE [dbo].[PeliculaAdultos] (
    [Id]      INT        NOT NULL,
    [Resumen] NCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_PeliculaAdultos_To_Pelicula]...';


GO
ALTER TABLE [dbo].[PeliculaAdultos] WITH NOCHECK
    ADD CONSTRAINT [FK_PeliculaAdultos_To_Pelicula] FOREIGN KEY ([Id]) REFERENCES [dbo].[Pelicula] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Accion_To_Pelicula]...';


GO
ALTER TABLE [dbo].[Accion] WITH NOCHECK
    ADD CONSTRAINT [FK_Accion_To_Pelicula] FOREIGN KEY ([PeliculaId]) REFERENCES [dbo].[PeliculaAdultos] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Horario_To_Pelicula]...';


GO
ALTER TABLE [dbo].[Horario] WITH NOCHECK
    ADD CONSTRAINT [FK_Horario_To_Pelicula] FOREIGN KEY ([PeliculaId]) REFERENCES [dbo].[Pelicula] ([Id]) ON DELETE SET NULL;


GO
PRINT N'Creating Foreign Key [dbo].[FK_PeliculaNinos_To_Pelicula]...';


GO
ALTER TABLE [dbo].[PeliculaNinos] WITH NOCHECK
    ADD CONSTRAINT [FK_PeliculaNinos_To_Pelicula] FOREIGN KEY ([Id]) REFERENCES [dbo].[Pelicula] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Relacion_To_Pelicula]...';


GO
ALTER TABLE [dbo].[Relacion_Pelicula_Actor] WITH NOCHECK
    ADD CONSTRAINT [FK_Relacion_To_Pelicula] FOREIGN KEY ([IdPelicula]) REFERENCES [dbo].[Pelicula] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------

DELETE FROM Accion;
DBCC CHECKIDENT ('Accion', RESEED, 0);
DELETE FROM Actor;
DBCC CHECKIDENT ('Actor', RESEED, 0);

DELETE FROM Cine;
DBCC CHECKIDENT ('Cine', RESEED, 0);


*/

--Datos Cine
MERGE INTO Cine AS Target
USING (VALUES
 (1, 'Cinepolis 1', 'San José, Desampados'),
 (2, 'Cinepolis 2', 'San José, Acosta')
)
AS Source ([Id], Nombre, Ubicacion)
ON Target.Id = Source.Id
WHEN NOT MATCHED BY TARGET THEN
INSERT (Nombre, Ubicacion)
VALUES (Nombre, Ubicacion);


--Datos Pelicula
MERGE INTO Pelicula AS Target
USING (VALUES
 (1, 'Avatar', 'Acción y Aventura', 'James Cameron'),
 (2, 'Gato con botas', 'Comedia y Aventura', 'Chris Miller'),
 (3, 'Maverick', 'Acción',  'Joseph Kosinski'),
 (4, 'Toy Story 3', 'Comedia',  'Lee Unkrich')
)
AS Source ([Id], Nombre, Genero, Director)
ON Target.Id = Source.Id
WHEN NOT MATCHED BY TARGET THEN
INSERT (Nombre, Genero, Director)
VALUES (Nombre, Genero, Director);

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[PeliculaAdultos] WITH CHECK CHECK CONSTRAINT [FK_PeliculaAdultos_To_Pelicula];

ALTER TABLE [dbo].[Accion] WITH CHECK CHECK CONSTRAINT [FK_Accion_To_Pelicula];

ALTER TABLE [dbo].[Horario] WITH CHECK CHECK CONSTRAINT [FK_Horario_To_Pelicula];

ALTER TABLE [dbo].[PeliculaNinos] WITH CHECK CHECK CONSTRAINT [FK_PeliculaNinos_To_Pelicula];

ALTER TABLE [dbo].[Relacion_Pelicula_Actor] WITH CHECK CHECK CONSTRAINT [FK_Relacion_To_Pelicula];


GO
PRINT N'Update complete.';


GO

@model WebApp_Cinepolis.Models.Pelicula

@{
    ViewBag.Title = "Edición";
}

<h2>Edición de película</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2"><strong>Género</strong></span>

            <div class="col-md-10">
                @Html.EditorFor(model => model.Genero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2"><strong>Restricción de edad</strong></span>
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EsAdultos)
                    @Html.ValidationMessageFor(model => model.EsAdultos, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Acciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Acciones, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Acciones, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Actores, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Actores, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Actores, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Resumen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Resumen, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Resumen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Atrás", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/PeliculasScript.js")
}
